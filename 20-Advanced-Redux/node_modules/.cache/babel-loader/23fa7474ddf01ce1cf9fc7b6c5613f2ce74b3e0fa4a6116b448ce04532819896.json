{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalPrice: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price * newItem.quantity,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        state.totalPrice += newItem.totalPrice;\n      }\n      state.totalQuantity = state.items.length;\n    },\n    removeItemFromCart() {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","totalPrice","cartSlice","name","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","title","length","removeItemFromCart","cartActions","actions","reducer"],"sources":["C:/git/react-complete-guide-course-resources-main/attachments/20 Advanced Redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialCartState,\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price * newItem.quantity,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        state.totalPrice += newItem.totalPrice;\r\n      }\r\n      state.totalQuantity = state.items.length;\r\n    },\r\n    removeItemFromCart() {},\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,gBAAgB;EAChBM,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACfC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAClBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXhB,UAAU,EAAEO,OAAO,CAACQ,KAAK,GAAGR,OAAO,CAACS,QAAQ;UAC5Cd,IAAI,EAAEK,OAAO,CAACU;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACO,QAAQ,EAAE;QACvBX,KAAK,CAACL,UAAU,IAAIO,OAAO,CAACP,UAAU;MACxC;MACAK,KAAK,CAACN,aAAa,GAAGM,KAAK,CAACP,KAAK,CAACoB,MAAM;IAC1C,CAAC;IACDC,kBAAkBA,CAAA,EAAG,CAAC;EACxB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGnB,SAAS,CAACoB,OAAO;AAE5C,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}