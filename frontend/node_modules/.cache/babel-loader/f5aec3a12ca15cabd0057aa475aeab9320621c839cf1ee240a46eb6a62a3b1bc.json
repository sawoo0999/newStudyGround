{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\react-complete-guide-course-resources-main\\\\attachments\\\\21 Routing\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// 도전 / 연습\n// 1. 다섯 개의 새로운 (더미) 페이지 컴포넌트를 추가하세요 (내용은 간단한 <h1> 요소일 수 있습니다)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. 이 다섯 페이지에 대한 라우팅 및 경로 정의를 추가하세요\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. 모든 페이지 컴포넌트 위에 <MainNavigation> 컴포넌트를 추가하는 루트 레이아웃을 추가하세요\n// 4. MainNavigation에 제대로 작동하는 링크를 추가하세요\n// 5. MainNavigation의 링크가 활성화될 때 \"active\" 클래스를 받도록 하세요\n// 6. EventsPage에 더미 이벤트 목록을 출력하세요\n//    각 목록 항목은 해당 EventDetailPage로의 링크를 포함해야 합니다\n// 7. EventDetailPage에서 선택된 이벤트의 ID를 출력하세요\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/react-complete-guide-course-resources-main/attachments/21 Routing/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// 도전 / 연습\n// 1. 다섯 개의 새로운 (더미) 페이지 컴포넌트를 추가하세요 (내용은 간단한 <h1> 요소일 수 있습니다)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. 이 다섯 페이지에 대한 라우팅 및 경로 정의를 추가하세요\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. 모든 페이지 컴포넌트 위에 <MainNavigation> 컴포넌트를 추가하는 루트 레이아웃을 추가하세요\n// 4. MainNavigation에 제대로 작동하는 링크를 추가하세요\n// 5. MainNavigation의 링크가 활성화될 때 \"active\" 클래스를 받도록 하세요\n// 6. EventsPage에 더미 이벤트 목록을 출력하세요\n//    각 목록 항목은 해당 EventDetailPage로의 링크를 포함해야 합니다\n// 7. EventDetailPage에서 선택된 이벤트의 ID를 출력하세요\n\nfunction App() {\n  return <div></div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAGA,CAAA,EAAG;EACb,oBAAOC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACpB;AAACC,EAAA,GAFQN,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}