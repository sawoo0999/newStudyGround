position
relative = 내 위치 기준
absolute = 부모 태그 기준 (부모태그에게 postion : relative 가 있어야함)

가운데 정렬 = left: 0, right:0, margin: auto, width : 적절히
 
z-index =  공중에 뜬 애들 우선 순위 정하기 (높을수록 앞으로)


CSS  스타일 처음 시작 할때 기본 코드 하면 좋은것 

div {
box-sizing : border-box; //padding, border을 보이는 width에 포함
}

body {
margin : 0px; //여백제거
}


vertical-align : top/middle/bottom 글자 상하 정렬

클래스 양을 줄이고 싶다면 뼈대용 Class , 살점용 Class 각각 제작

ex) button class ="main-btn bh-red"



font 안티앨리어싱 주는법
font 들어간 태그 {
 transform: rotate(0.03deg) // 글자들을 약간 회전시켜서 부드럽게 만들기
}




display: flex;  // 쉽게 가로로 배치하는 법

 justify-content: center;  //flex를 사용할때 가운데 정렬

flex-direction: column; // 가로로 배치하는 법

  flex-wrap: wrap; //화면에 넘치면 가로 정렬


align-times : center; // 위아래 가운데 정렬

flex-grow: 2;  //2번 박스에 1번 박스 보다  2배 차지 (nav 사용해서 상단 메뉴 할때 사용)



div.(클래스)container>(자식)div.(자식 클래스)box*(개수)3

단위

vw //브라우저 폭(width)에 비례
vh //브라우저 높이 
rem //기본 폰트사이즈에 비례


@media screen and (max-width:1000px) //반응형 웹사이트 할때 사용 




많이사용하는 width: n px
1200px //태블릿 디자인
992px
768px
576px //모바일 디자인


font awesome 아이콘 사이트 



transition : all 1s; //위에 모든코드중 하나도 변하면 1초에 걸쳐 변해줌

opacity : 1; //투명도

video
poster="경로" //비디오에 썸네일
loop //무한재생
autoplay muted //자동재생 둘이 같이 있어야 자동 재생

animation

@keyframes 작명 {
0%{
 }
}

animation-name: "작명";
animation-duration: 1s;

animation-delay //딜레이양
animation-iteration-count //반복횟수
animation=timing-function //베지어