{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\react-complete-guide-course-resources-main\\\\attachments\\\\21 Routing\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const event = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"f+CY/h38cRQOxw9KpH9VFCtzaWo=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  const res = await fetch(`http://localhost:8080/events/${id}`);\n  if (!res.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const data = await res.json();\n    return data;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","res","fetch","ok","message","status","data","$RefreshReg$"],"sources":["C:/git/react-complete-guide-course-resources-main/attachments/21 Routing/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const event = useLoaderData();\r\n  return <EventItem event={event} />;\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.id;\r\n  const res = await fetch(`http://localhost:8080/events/${id}`);\r\n\r\n  if (!res.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const data = await res.json();\r\n    return data;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,KAAK,GAAGN,aAAa,CAAC,CAAC;EAC7B,oBAAOG,OAAA,CAACF,SAAS;IAACK,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACL,EAAA,CAHQD,eAAe;EAAA,QACRJ,aAAa;AAAA;AAAAW,EAAA,GADpBP,eAAe;AAKxB,eAAeA,eAAe;AAE9B,OAAO,eAAeQ,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgCF,EAAE,EAAE,CAAC;EAE7D,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE;IACX,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACjB,IAAI,CAAC,CAAC;IAC7B,OAAOsB,IAAI;EACb;AACF;AAAC,IAAAV,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}